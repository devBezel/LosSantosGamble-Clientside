{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { Animation } from '../Core/Utilities/Animation';\r\nexport default async () => {\r\n    const player = alt.Player.local;\r\n    alt.onServer('native-wrapper:freezeEntityPosition', async (toggle) => {\r\n        game.freezeEntityPosition(player.scriptID, toggle);\r\n    });\r\n    alt.onServer('native-wrapper:playAnimation', async (animDic, animation, time, animFlag = 1) => {\r\n        alt.log('Otrzymalem info o animacji');\r\n        const anim = new Animation(animDic, animation, time, animFlag);\r\n        await anim.loadAnimDictAsync();\r\n        anim.playAnim();\r\n    });\r\n    alt.onServer('native-wrapper:setEnableHandcuffs', async (toggle) => {\r\n        game.setEnableHandcuffs(player.scriptID, toggle);\r\n    });\r\n    alt.onServer('native-wrapper:clearPedTasks', async () => {\r\n        game.clearPedTasks(player.scriptID);\r\n    });\r\n    alt.onServer('native-wrapper:disablePlayerFiring', async (toggle) => {\r\n        game.disablePlayerFiring(player.scriptID, toggle);\r\n    });\r\n    alt.onServer('native-wrapper:setPedCanPlayGestureAnims', async (toggle) => {\r\n        game.setPedCanPlayGestureAnims(player.scriptID, toggle);\r\n    });\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Animation.ts"]}
