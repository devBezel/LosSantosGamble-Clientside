{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { View } from 'client/modules/Core/Utilities/View';\r\nimport { Key } from 'client/modules/Constant/Keys/Key';\r\nexport default async () => {\r\n    const player = alt.Player.local;\r\n    let webView;\r\n    let disableControlsCuffInterval;\r\n    alt.on('keyup', async (key) => {\r\n        if (key === Key.ESCAPE) {\r\n            if (webView === null || webView === undefined) {\r\n                return;\r\n            }\r\n            webView.close();\r\n        }\r\n    });\r\n    alt.onServer('group-general:openGroupPanel', openGroupPanel);\r\n    async function openGroupPanel(group, workers, ranks, vehicles, worker, slot) {\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        webView.open('', true, 'group/panel', true);\r\n        alt.log(`ranks count: ${ranks.length}`);\r\n        webView.emit('group-general:dataGroup', { group, workers, ranks, vehicles, worker, slot });\r\n        webView.on('cef:vehicleSpawn', respawnGroupVehicle);\r\n        webView.on('group:changeWorkerRights', changeWorkerRights);\r\n        webView.on('group:changeWorkerRank', changeWorkerRank);\r\n    }\r\n    async function respawnGroupVehicle(vehicleId) {\r\n        alt.emitServer('vehicle:spawnVehicle', vehicleId);\r\n    }\r\n    async function changeWorkerRights(characterId, characterRights, groupSlot) {\r\n        alt.emitServer('group:changeWorkerRights', characterId, characterRights, groupSlot);\r\n    }\r\n    async function changeWorkerRank(characterId, rankToChange, groupSlot) {\r\n        alt.emitServer('group:changeWorkerRank', characterId, rankToChange, groupSlot);\r\n    }\r\n    alt.onServer('group:searchPlayer', searchPlayer);\r\n    async function searchPlayer(items) {\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        webView.open('', true, 'search/entity', true);\r\n        webView.emit('group:searchPlayer', items);\r\n        webView.on('group:confiscatePlayerItem', confiscatePlayerItem);\r\n    }\r\n    async function confiscatePlayerItem(item) {\r\n        alt.emitServer('group:confiscatePlayerItem', JSON.stringify(item));\r\n    }\r\n    alt.onServer('group:cuffPlayer', cuffPlayer);\r\n    async function cuffPlayer() {\r\n        game.setEnableHandcuffs(player.scriptID, true);\r\n        game.disablePlayerFiring(player.scriptID, true);\r\n        game.setPedCanPlayGestureAnims(player.scriptID, false);\r\n        game.freezeEntityPosition(player.scriptID, true);\r\n        disableControlsCuffInterval = alt.setInterval(() => {\r\n            game.disableControlAction(0, 1, true);\r\n            game.disableControlAction(0, 2, true);\r\n            game.disableControlAction(0, 24, true);\r\n            game.disableControlAction(0, 257, true);\r\n            game.disableControlAction(0, 25, true);\r\n            game.disableControlAction(0, 263, true);\r\n            game.disableControlAction(0, 32, true);\r\n            game.disableControlAction(0, 34, true);\r\n            game.disableControlAction(0, 31, true);\r\n            game.disableControlAction(0, 45, true);\r\n            game.disableControlAction(0, 22, true);\r\n            game.disableControlAction(0, 44, true);\r\n            game.disableControlAction(0, 37, true);\r\n            game.disableControlAction(0, 23, true);\r\n            game.disableControlAction(0, 288, true);\r\n            game.disableControlAction(0, 289, true);\r\n            game.disableControlAction(0, 170, true);\r\n            game.disableControlAction(0, 167, true);\r\n            game.disableControlAction(0, 0, true);\r\n            game.disableControlAction(0, 26, true);\r\n            game.disableControlAction(0, 73, true);\r\n            game.disableControlAction(2, 199, true);\r\n            game.disableControlAction(0, 59, true);\r\n            game.disableControlAction(0, 71, true);\r\n            game.disableControlAction(0, 72, true);\r\n            game.disableControlAction(2, 36, true);\r\n            game.disableControlAction(0, 47, true);\r\n            game.disableControlAction(0, 264, true);\r\n            game.disableControlAction(0, 257, true);\r\n            game.disableControlAction(0, 140, true);\r\n            game.disableControlAction(0, 141, true);\r\n            game.disableControlAction(0, 142, true);\r\n            game.disableControlAction(0, 143, true);\r\n            game.disableControlAction(0, 75, true);\r\n            game.disableControlAction(27, 75, true);\r\n        }, 2);\r\n    }\r\n    alt.onServer('group:uncuffPlayer', uncuffPlayer);\r\n    async function uncuffPlayer() {\r\n        game.setEnableHandcuffs(player.scriptID, false);\r\n        game.disablePlayerFiring(player.scriptID, false);\r\n        game.setPedCanPlayGestureAnims(player.scriptID, true);\r\n        game.freezeEntityPosition(player.scriptID, false);\r\n        if (disableControlsCuffInterval !== undefined) {\r\n            alt.clearInterval(disableControlsCuffInterval);\r\n        }\r\n    }\r\n    alt.onServer('group:dragPlayer', dragPlayer);\r\n    async function dragPlayer(entityId) {\r\n        const playerToDrag = alt.Player.all.find(x => x.id === entityId);\r\n        if (playerToDrag.scriptID === player.scriptID) {\r\n            return;\r\n        }\r\n        if (game.doesEntityExist(playerToDrag.scriptID) && game.isPedOnFoot(playerToDrag.scriptID)) {\r\n            game.attachEntityToEntity(playerToDrag.scriptID, player.scriptID, 11816, 0.54, 0.54, 0.0, 0.0, 0.0, 0.0, false, false, false, false, 2, true);\r\n        }\r\n    }\r\n    alt.onServer('group:undragPlayer', undragPlayer);\r\n    async function undragPlayer() {\r\n        game.detachEntity(player.scriptID, true, false);\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/View.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/group.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/Keys/Key.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/groupWorker.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/vehicle.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/Item.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/groupRank.ts"]}
