{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { View } from '../Utilities/View';\r\nimport { Camera } from '../Utilities/Camera';\r\nimport { spawnConfig } from 'client/modules/Configs/SpawnConfig';\r\nimport { baseConfig } from 'client/modules/Configs/BaseConfig';\r\nexport default async () => {\r\n    let webView;\r\n    let loginCamera = new Camera(3331.6, 5222.5, 23, 10);\r\n    const url = `${baseConfig.cefLocalUrl}login`;\r\n    alt.onServer('other:first-connect', showLoginWindow);\r\n    alt.onServer('character:wearClothes', wearCharacterClothes);\r\n    alt.on('clothesScript:firstCharacterCustomizationCompleted', customizationCompleted);\r\n    async function showLoginWindow() {\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        webView.open(url, true);\r\n        webView.on('cef:character-selected', characterDetails);\r\n        loginCamera.pointAtCoord(3331.6, 5222.5, 23);\r\n    }\r\n    async function characterDetails(character) {\r\n        alt.Player.local.setMeta('character:data', character);\r\n        webView.close();\r\n        alt.emitServer('login:characterDetail', JSON.stringify(character));\r\n    }\r\n    async function wearCharacterClothes(characterLook) {\r\n        if (characterLook === null || characterLook === undefined || characterLook.characterId === 0) {\r\n            game.freezeEntityPosition(alt.Player.local.scriptID, true);\r\n            game.setEntityCoords(alt.Player.local.scriptID, spawnConfig.customizationCharacterPosition.x, spawnConfig.customizationCharacterPosition.y, spawnConfig.customizationCharacterPosition.z, false, false, false, false);\r\n            game.setEntityHeading(alt.Player.local.scriptID, 60);\r\n            if (!loginCamera) {\r\n                loginCamera = new Camera(-1420.18, 6754.73, 5.87549, 0);\r\n            }\r\n            loginCamera.position(spawnConfig.cameraPosition);\r\n            loginCamera.fov(70);\r\n            return alt.emit('character:showCreateCharacterWindow', true);\r\n        }\r\n        loginCamera.destroy();\r\n        return alt.emit('character:wearClothes', characterLook);\r\n    }\r\n    async function customizationCompleted() {\r\n        loginCamera.destroy();\r\n        alt.emitServer('login:successWearChangeWorld');\r\n        alt.emit('notify-client:success', 'Pomyślnie ubrałeś postać', 'Twoja postać została ubrana poprawnie');\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/View.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/character.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/characterLook.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Camera.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Configs/SpawnConfig.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Configs/BaseConfig.ts"]}
