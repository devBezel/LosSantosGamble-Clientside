{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { vehicleConfig } from 'client/modules/Configs/VehicleConfig';\r\nimport { Calculation } from '../Utilities/Calculation';\r\nexport class VehicleHelper {\r\n    static getVehicleInRange(pos, range) {\r\n        const vehicles = alt.Vehicle.all.find(x => Calculation.distance(x.pos, pos) <= range);\r\n        return vehicles;\r\n    }\r\n    static isVehicleLocked(vehicle) {\r\n        if (game.getVehicleDoorLockStatus(vehicle.scriptID) === 3) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    static isDoorOpen(vehicle, door) {\r\n        if (game.getVehicleDoorAngleRatio(vehicle.scriptID, door) > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    static isVehicleOwner(vehicleData, player) {\r\n        if (vehicleData.ownerId === player.characterData().id) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    static isVehicleEngineBroken(vehicle) {\r\n        if (game.getEntityHealth(vehicle.scriptID) <= vehicleConfig.damage.highDevasted) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/node_modules/typescript/lib/typescript.d.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/vehicle.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Configs/VehicleConfig.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Calculation.ts"]}
