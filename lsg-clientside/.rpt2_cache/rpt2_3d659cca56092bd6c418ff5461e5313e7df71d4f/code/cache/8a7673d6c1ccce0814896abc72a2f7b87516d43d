{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { Calculation } from '../../Utilities/Calculation';\r\nimport { NativeNotification } from '../../Notify/NativeNotification';\r\nimport { nativeNotificationType } from 'client/modules/Constant/Notification/NativeNotificationType';\r\nexport default async () => {\r\n    const player = alt.Player.local;\r\n    let playerInterval;\r\n    let playerTimer;\r\n    alt.onServer('player-damage:drawFall', playerDrawFall);\r\n    async function playerDrawFall() {\r\n        if (player.getMeta('player:collapse'))\r\n            return;\r\n        const probabilityOfCollapse = Calculation.probability(90);\r\n        if (!probabilityOfCollapse)\r\n            return;\r\n        NativeNotification.showNotification(null, nativeNotificationType.Normal, 0, 'Twoja postać doznała szoku', '~g~ Stan zdrowia', 'Napij się wody lub poproś, aby Cie ktoś otrząsnął', 1);\r\n        game.setCamEffect(2);\r\n        player.setMeta('player:collapse', true);\r\n        playerInterval = alt.setInterval(() => {\r\n            game.setPedToRagdoll(alt.Player.local.scriptID, 100 * 10, 1000 * 10, 0, true, true, false);\r\n            if (game.getEntityHealth(player.scriptID) <= 0) {\r\n                characterHasBeenCalmedDown();\r\n            }\r\n        }, 1000);\r\n        playerTimer = alt.setTimeout(() => {\r\n            characterHasBeenCalmedDown();\r\n            NativeNotification.showNotification(null, nativeNotificationType.Normal, 0, 'Twoja postać się otrząsnęla', '~g~ Stan zdrowia', 'Minął czas szoku, twoja postać doszła do siebie', 1);\r\n        }, 120000);\r\n    }\r\n    alt.on('player-interaction:help', async () => {\r\n        characterHasBeenCalmedDown();\r\n        NativeNotification.showNotification(null, nativeNotificationType.Normal, 0, 'Twoja postać się otrząsnęla', '~g~ Stan zdrowia', 'Ktoś pomógł Ci się otrząsnąć', 1);\r\n    });\r\n    async function characterHasBeenCalmedDown() {\r\n        game.clearPedTasks(player.scriptID);\r\n        alt.clearInterval(playerInterval);\r\n        player.setMeta('player:collapse', false);\r\n        alt.clearTimeout(playerTimer);\r\n        alt.setTimeout(() => {\r\n            game.setCamEffect(0);\r\n        }, 5000);\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Calculation.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Notify/NativeNotification.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/Notification/NativeNotificationType.ts"]}
