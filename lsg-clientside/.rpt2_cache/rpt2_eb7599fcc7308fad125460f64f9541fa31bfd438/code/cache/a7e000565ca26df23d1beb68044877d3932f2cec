{"code":"import game from 'natives';\r\nimport Size from \"../utils/Size\";\r\nimport Rectangle from \"./Rectangle\";\r\nimport Screen from \"../utils/Screen\";\r\nexport default class Container extends Rectangle {\r\n    constructor(pos, size, color) {\r\n        super(pos, size, color);\r\n        this.Items = [];\r\n    }\r\n    addItem(item) {\r\n        this.Items.push(item);\r\n    }\r\n    Draw(offset) {\r\n        if (!this.Enabled)\r\n            return;\r\n        offset = offset || new Size();\r\n        const screenw = Screen.Width;\r\n        const screenh = Screen.Height;\r\n        const height = 1080.0;\r\n        const ratio = screenw / screenh;\r\n        const width = height * ratio;\r\n        const w = this.Size.Width / width;\r\n        const h = this.Size.Height / height;\r\n        const x = (this.Pos.X + offset.Width) / width + w * 0.5;\r\n        const y = (this.Pos.Y + offset.Height) / height + h * 0.5;\r\n        game.drawRect(x, y, w, h, this.Color.R, this.Color.G, this.Color.B, this.Color.A, false);\r\n        for (var item of this.Items)\r\n            item.Draw(new Size(this.Pos.X + offset.Width, this.Pos.Y + offset.Height));\r\n    }\r\n}\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Size.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/modules/Rectangle.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Screen.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Point.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Color.ts"]}
