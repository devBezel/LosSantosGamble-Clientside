{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { View } from '../../Utilities/View';\r\nimport { Key } from 'client/modules/Constant/Keys/Key';\r\nexport default async () => {\r\n    let webView;\r\n    const url = 'http://localhost:4000/character/creator';\r\n    alt.on('keyup', (key) => {\r\n        if (key === Key.INSERT) {\r\n            showCreationWindow();\r\n        }\r\n        else if (key === Key.ESCAPE) {\r\n            webView.close();\r\n        }\r\n    });\r\n    async function updateComponentVariation(id, drawable, texture, isProp) {\r\n        const playerId = alt.Player.local.scriptID;\r\n        if (isProp) {\r\n            game.setPedPropIndex(playerId, id, drawable, texture, true);\r\n            if (drawable === -1) {\r\n                game.clearPedProp(playerId, id);\r\n            }\r\n        }\r\n        game.setPedComponentVariation(playerId, id, drawable, texture, 0);\r\n    }\r\n    async function randomClothes() {\r\n        const playerId = alt.Player.local.scriptID;\r\n        game.setPedRandomComponentVariation(playerId, 1);\r\n    }\r\n    async function clearClothes() {\r\n        game.setPedDefaultComponentVariation(alt.Player.local.scriptID);\r\n    }\r\n    async function changeCharacterRotation(rot) {\r\n        game.setEntityHeading(alt.Player.local.scriptID, rot);\r\n    }\r\n    async function updateClothes(characterLook) {\r\n        game.setPedHeadBlendData(alt.Player.local.scriptID, characterLook.fatherFaceId, characterLook.motherFaceId, 0, characterLook.skinColour, 0, 0, characterLook.shapeMix, 0, 0, true);\r\n        game.setPedComponentVariation(alt.Player.local.scriptID, 2, characterLook.hairId, 0, 0);\r\n        game.setPedHairColor(alt.Player.local.scriptID, characterLook.hairColor, characterLook.hairColorTwo);\r\n        game.setPedComponentVariation(alt.Player.local.scriptID, 4, characterLook.legsId, characterLook.legsTexture, 0);\r\n    }\r\n    async function getNumberOfTextureVariation(componentId, clothesLength) {\r\n        const map = [];\r\n        for (let i = 0; i < clothesLength; i++) {\r\n            map.push({ index: i, variation: game.getNumberOfPedTextureVariations(alt.Player.local.scriptID, componentId, i) });\r\n        }\r\n        webView.emit('characterCreator:clothesVariation', map);\r\n    }\r\n    async function showCreationWindow() {\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        webView.open(url, true);\r\n        webView.on('cef:characterCreatorRandomClothes', randomClothes);\r\n        webView.on('cef:characterCreatorClearClothes', clearClothes);\r\n        webView.on('cef:characterCreatorChangeRotation', changeCharacterRotation);\r\n        webView.on('cef:characterCreatorUpdateClothes', updateClothes);\r\n        webView.on('cef:characterCreatorGetComponentsVariation', getNumberOfTextureVariation);\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/View.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/Keys/Key.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Entities/Player.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/characterLook.ts"]}
