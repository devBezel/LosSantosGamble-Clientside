{"code":"import * as alt from 'alt';\r\nimport { View } from '../../Utilities/View';\r\nexport default async () => {\r\n    const player = alt.Player.local;\r\n    let webView;\r\n    alt.onServer('building:request', requestEnterBuilding);\r\n    alt.onServer('building:manageData', openWindowManageData);\r\n    async function requestEnterBuilding(charge, name, enter, isCharacterOwner, isCharacterTenant) {\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        webView.open('', true, 'doors', true);\r\n        webView.emit('building:request', { charge, name, enter, isCharacterOwner, isCharacterTenant });\r\n        webView.on('building:enterBuilding', enterBuilding);\r\n        webView.on('building:exitBuilding', exitBuilding);\r\n        webView.on('building:manage', getManageInformation);\r\n        webView.on('building:requestLock', requestLockBuilding);\r\n    }\r\n    async function enterBuilding() {\r\n        webView.close();\r\n        alt.emitServer('building:enterBuilding');\r\n    }\r\n    async function exitBuilding() {\r\n        webView.close();\r\n        alt.emitServer('building:exitBuilding');\r\n    }\r\n    async function getManageInformation() {\r\n        webView.close();\r\n        alt.emitServer('building:getManageData');\r\n    }\r\n    async function openWindowManageData(data, buildingItems, playerItems, playersInBuildingEvent, tenant) {\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        let playersInBuilding = [];\r\n        playersInBuilding = [];\r\n        playersInBuildingEvent.forEach((plr) => {\r\n            playersInBuilding.push({ id: plr.getSyncedMeta('account:id'), name: plr.getSyncedMeta('character:name') });\r\n        });\r\n        webView.open('', true, 'building/manage', true);\r\n        webView.emit('building:data', data, buildingItems, playerItems, playersInBuilding, tenant);\r\n        webView.on('building:requestLock', requestLockBuilding);\r\n        webView.on('building:editData', editBuildingData);\r\n        webView.on('building:editOnSaleData', editOnSaleData);\r\n        webView.on('building:withdrawBalance', withdrawBuildingBalance);\r\n        webView.on('building:insertItemToMagazine', insertItemToMagazine);\r\n        webView.on('building:insertItemFromMagazineToEquipment', insertItemFromMagazineToEquipment);\r\n        webView.on('building:turnSbOut', playerTurnSbOut);\r\n        webView.on('building:addPlayer', addPlayerToBuilding);\r\n    }\r\n    async function requestLockBuilding() {\r\n        alt.emitServer('building:requestLockBuilding');\r\n    }\r\n    async function editBuildingData(name, entryFee) {\r\n        alt.emitServer('building:editData', name, entryFee);\r\n    }\r\n    async function editOnSaleData(sale, saleCost) {\r\n        alt.emitServer('building:editOnSaleData', sale, saleCost);\r\n    }\r\n    async function withdrawBuildingBalance(balance) {\r\n        alt.emitServer('building:withdrawBalance', balance);\r\n    }\r\n    async function insertItemToMagazine(itemID) {\r\n        alt.emitServer('building:insertItemToMagazine', itemID);\r\n    }\r\n    async function insertItemFromMagazineToEquipment(itemID) {\r\n        alt.emitServer('building:insertItemFromMagazineToEquipment', itemID);\r\n    }\r\n    async function playerTurnSbOut(playerId) {\r\n        alt.emitServer('building:turnSbOut', playerId);\r\n    }\r\n    async function addPlayerToBuilding(playerId) {\r\n        alt.emitServer('building:addPlayer', playerId);\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/View.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/Keys/Key.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/building.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/Item.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/buildingTenant.ts"]}
