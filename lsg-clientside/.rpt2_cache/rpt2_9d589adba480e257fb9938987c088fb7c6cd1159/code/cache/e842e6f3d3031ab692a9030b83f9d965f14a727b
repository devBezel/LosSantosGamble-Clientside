{"code":"import * as alt from 'alt';\r\nimport * as natives from 'natives';\r\nexport let currentView;\r\nexport class View {\r\n    constructor() {\r\n        if (alt.Player.local.getMeta('chat'))\r\n            return;\r\n        if (currentView === undefined) {\r\n            currentView = this;\r\n        }\r\n        return currentView;\r\n    }\r\n    open(url, gameControls = true) {\r\n        if (!currentView.view) {\r\n            currentView.view = new alt.WebView(url);\r\n            currentView.events = [];\r\n        }\r\n        alt.Player.local.setMeta('viewOpen', true);\r\n        currentView.on('close', currentView.close);\r\n        currentView.view.url = url;\r\n        currentView.isVisible = true;\r\n        currentView.view.focus();\r\n        currentView.view.ready = true;\r\n        alt.showCursor(true);\r\n        natives.displayRadar(false);\r\n        if (gameControls) {\r\n            currentView.gameControls = this.toggleGameControls.bind(this);\r\n            currentView.interval = alt.setInterval(currentView.gameControls, 0);\r\n        }\r\n    }\r\n    close() {\r\n        currentView.ready = false;\r\n        currentView.events.forEach((event) => {\r\n            currentView.view.off(event.name, event.func);\r\n        });\r\n        currentView.view.off('close', currentView.close);\r\n        currentView.view.url = 'http://localhost:4200/';\r\n        currentView.view.unfocus();\r\n        currentView.events = [];\r\n        alt.showCursor(false);\r\n        natives.displayRadar(true);\r\n        alt.Player.local.setMeta('viewOpen', false);\r\n        if (currentView.interval !== undefined) {\r\n            alt.clearInterval(currentView.interval);\r\n            currentView.interval = undefined;\r\n        }\r\n    }\r\n    on(name, func) {\r\n        if (currentView.view === undefined)\r\n            return;\r\n        if (currentView.events.includes(event => event.name === name))\r\n            return;\r\n        const event = {\r\n            name,\r\n            func,\r\n        };\r\n        currentView.events.push(event);\r\n        currentView.view.on(name, func);\r\n    }\r\n    emit(name, ...args) {\r\n        if (!currentView.view)\r\n            return;\r\n        currentView.view.emit(name, ...args);\r\n    }\r\n    toggleGameControls() {\r\n        natives.disableAllControlActions(0);\r\n        natives.disableAllControlActions(1);\r\n    }\r\n}\r\n","references":[]}
