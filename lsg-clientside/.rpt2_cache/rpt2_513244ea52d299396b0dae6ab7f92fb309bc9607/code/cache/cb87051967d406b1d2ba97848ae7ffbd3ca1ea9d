{"code":"import * as alt from 'alt';\r\nimport Scaleform from '../utils/Scaleform';\r\nexport default class Message {\r\n    static Initialize(scaleForm, transitionOutAnimName) {\r\n        this._transitionOutAnimName = transitionOutAnimName;\r\n        this._scaleform = new Scaleform(scaleForm);\r\n    }\r\n    static get IsVisible() {\r\n        return this._messageVisible;\r\n    }\r\n    static get Scaleform() {\r\n        return this._scaleform;\r\n    }\r\n    static Load() {\r\n        if (this._delayedTransitionInTimeout != null) {\r\n            alt.clearTimeout(this._delayedTransitionInTimeout);\r\n            this._delayedTransitionInTimeout = null;\r\n        }\r\n    }\r\n    static SetDelayedTransition(messageHandler, time) {\r\n        this._delayedTransitionInTimeout = alt.setTimeout(() => {\r\n            this._delayedTransitionInTimeout = null;\r\n            this.TransitionIn(messageHandler, time);\r\n        }, this._transitionOutTimeMs);\r\n    }\r\n    static ShowCustomShard(funcName, time = 5000, ...funcArgs) {\r\n        this.ShowComplexCustomShard(() => {\r\n            this._scaleform.callFunction(funcName, ...funcArgs);\r\n        }, time);\r\n    }\r\n    static ShowComplexCustomShard(messageHandler, time = 5000) {\r\n        this.Load();\r\n        if (this._messageVisible) {\r\n            this.TransitionOut();\r\n            this.SetDelayedTransition(() => messageHandler(), time);\r\n        }\r\n        else {\r\n            this.TransitionIn(messageHandler, time);\r\n        }\r\n    }\r\n    static TransitionOut() {\r\n        if (!this._messageVisible)\r\n            return;\r\n        if (this._transitionOutTimeout != null) {\r\n            alt.clearTimeout(this._transitionOutTimeout);\r\n            this._transitionOutTimeout = null;\r\n        }\r\n        if (this._transitionOutFinishedTimeout != null) {\r\n            alt.clearTimeout(this._transitionOutFinishedTimeout);\r\n            this._transitionOutFinishedTimeout = null;\r\n        }\r\n        this._scaleform.callFunction(this._transitionOutAnimName);\r\n        this._transitionOutFinishedTimeout = alt.setTimeout(() => {\r\n            this._messageVisible = false;\r\n            this._scaleform.recreate();\r\n        }, this._transitionOutTimeMs);\r\n    }\r\n    static TransitionIn(messageHandler, transitionOutTime = 500) {\r\n        this._messageVisible = true;\r\n        messageHandler();\r\n        this.SetTransitionOutTimer(transitionOutTime);\r\n    }\r\n    static SetTransitionOutTimer(time) {\r\n        this._transitionOutTimeout = alt.setTimeout(() => {\r\n            this._transitionOutTimeout = null;\r\n            this.TransitionOut();\r\n        }, time);\r\n    }\r\n    static Render() {\r\n        if (this._messageVisible) {\r\n            this._scaleform.render2D();\r\n        }\r\n    }\r\n}\r\nMessage._messageVisible = false;\r\nMessage._transitionOutTimeout = null;\r\nMessage._transitionOutFinishedTimeout = null;\r\nMessage._delayedTransitionInTimeout = null;\r\nMessage._scaleform = null;\r\nMessage._transitionOutTimeMs = 500;\r\nMessage._transitionOutAnimName = null;\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Scaleform.ts"]}
