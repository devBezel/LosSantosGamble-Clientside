{"code":"import * as alt from 'alt';\r\nimport { View } from '../Utilities/View';\r\nexport default async () => {\r\n    let webView;\r\n    const player = alt.Player.local;\r\n    alt.onServer('vehicle:openWindow', openVehicleWindow);\r\n    alt.onServer('vehicle-script:vehicleInfo', vehicleInfoWindow);\r\n    async function openVehicleWindow(vehicleList) {\r\n        alt.log(vehicleList.length);\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        webView.open('', true, 'character/vehicle');\r\n        webView.emit('cef:vehicleList', vehicleList);\r\n        webView.on('cef:vehicleSpawn', sendVehicleToServer);\r\n    }\r\n    async function sendVehicleToServer(vehicleId) {\r\n        alt.emitServer('vehicle:spawnVehicle', vehicleId);\r\n    }\r\n    async function vehicleInfoWindow(vehicle, upgrades) {\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        webView.open('', true, 'vehicle/info', false);\r\n        webView.emit('vehicle-script:vehicleInfo', { vehicle, upgrades });\r\n        webView.on('vehicle-script:removeUpgrade', removeVehicleUpgrade);\r\n    }\r\n    async function removeVehicleUpgrade(item) {\r\n        if (player.vehicle === undefined)\r\n            return;\r\n        webView.close();\r\n        alt.emitServer('vehicle-script:removeUpgrade', item.id);\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/vehicle.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/View.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/Keys/Key.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/Item.ts"]}
