{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { Key } from 'client/modules/Constant/Keys/Key';\r\nimport { getVehicleInRange, isVehicleLocked, isDoorOpen } from './VehicleHelper';\r\nimport { View } from '../Utilities/View';\r\nexport default async () => {\r\n    let webView;\r\n    let vehicle;\r\n    const player = alt.Player.local;\r\n    alt.onServer('player:enterVehicle', playerEnterVehicle);\r\n    alt.on('keyup', async (key) => {\r\n        if (key === Key.ESCAPE) {\r\n            if (webView === null || webView === undefined) {\r\n                return;\r\n            }\r\n            webView.close();\r\n        }\r\n    });\r\n    let doorLockState;\r\n    (function (doorLockState) {\r\n        doorLockState[doorLockState[\"Open\"] = 1] = \"Open\";\r\n        doorLockState[doorLockState[\"Closed\"] = 3] = \"Closed\";\r\n    })(doorLockState || (doorLockState = {}));\r\n    alt.on('keyup', async (key) => {\r\n        if (key === Key.E) {\r\n            const vehicleRange = getVehicleInRange(alt.Player.local.pos, 5);\r\n            if (vehicleRange === null || vehicleRange === undefined)\r\n                return;\r\n            if (player.vehicle != null)\r\n                return;\r\n            const vehicleData = vehicleRange.getSyncedMeta('vehicle:syncedData');\r\n            if (vehicleData === null || vehicleData === undefined)\r\n                return;\r\n            if (!webView) {\r\n                webView = new View();\r\n            }\r\n            vehicle = vehicleRange;\r\n            webView.open('', true, 'vehicle/interaction');\r\n            webView.emit('vehicle-interaction:vehicleData', vehicleData);\r\n            webView.on('cef-vehicle-interaction:openVehicle', openDoorLockVehicle);\r\n            webView.on('cef-vehicle-interaction:openDoor', openVehicleDoor);\r\n        }\r\n    });\r\n    async function openDoorLockVehicle(vehicleData) {\r\n        webView.close();\r\n        if (vehicle.scriptID === null || vehicle.scriptID === undefined)\r\n            return;\r\n        if (vehicleData.ownerId !== player.characterData().id) {\r\n            return alt.emit('notify:error', null, 'Nie posiadasz kluczy do tego pojazdu');\r\n        }\r\n        if (game.getVehicleDoorLockStatus(vehicle.scriptID) !== doorLockState.Closed) {\r\n            game.setVehicleDoorsLocked(vehicle.scriptID, 3);\r\n            return alt.emit('notify:success', null, 'Pojazd został zamknięty');\r\n        }\r\n        game.setVehicleDoorsLocked(vehicle.scriptID, 1);\r\n        return alt.emit('notify:success', null, 'Pojazd został otwarty');\r\n    }\r\n    async function openVehicleDoor(vehicleData, door) {\r\n        webView.close();\r\n        if (vehicle.scriptID === null || vehicle.scriptID === undefined)\r\n            return;\r\n        if (isVehicleLocked(vehicle)) {\r\n            return alt.emit('notify:error', null, 'Ten pojazd jest zamknięty, musisz go otworzyć');\r\n        }\r\n        if (isDoorOpen(vehicle, door)) {\r\n            return game.setVehicleDoorShut(vehicle.scriptID, door, false);\r\n        }\r\n        return game.setVehicleDoorOpen(vehicle.scriptID, door, false, false);\r\n    }\r\n    async function playerEnterVehicle(seat) {\r\n        if (seat === 1) {\r\n            alt.log(`miejsce ${seat}`);\r\n            game.setPedConfigFlag(alt.Player.local.scriptID, 429, true);\r\n        }\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/Keys/Key.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Vehicle/VehicleHelper.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/View.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/vehicle.ts"]}
