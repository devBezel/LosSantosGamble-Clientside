{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nexport class Calculation {\r\n    static distance(distOne, distTwo) {\r\n        const dist = Math.pow(distOne.x - distTwo.x, 2) + Math.pow(distOne.y - distTwo.y, 2) + Math.pow(distOne.z - distTwo.z, 2);\r\n        return dist;\r\n    }\r\n    static forwardVectorFromRotation(rotation) {\r\n        const z = rotation.z * (Math.PI / 180.0);\r\n        const x = rotation.x * (Math.PI / 180.0);\r\n        const num = Math.abs(Math.cos(x));\r\n        return new alt.Vector3(-Math.sin(z) * num, Math.cos(z) * num, Math.sin(x));\r\n    }\r\n    static positionInFront(position, rotation, distance) {\r\n        const forwardVector = Calculation.forwardVectorFromRotation(rotation);\r\n        const scaledForwardVector = new alt.Vector3(forwardVector.x * distance, forwardVector.y * distance, forwardVector.z * distance);\r\n        return new alt.Vector3(position.x + scaledForwardVector.x, position.y + scaledForwardVector.y, position.z + scaledForwardVector.z);\r\n    }\r\n    static probability(percent) {\r\n        const randNumber = Math.floor(Math.random() * 100) + 1;\r\n        alt.log(`Wylosowana liczba: ${randNumber}`);\r\n        if (randNumber > 0 && randNumber <= percent) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    static getVehicleInRange(pos, range) {\r\n        const vehicles = alt.Vehicle.all.find(x => this.positionInFront(alt.Player.local.pos, game.getEntityRotation(alt.Player.local.scriptID, 2), range) <= pos);\r\n        return vehicles;\r\n    }\r\n    static getOffsetPositionInWorldCoords(entityHandle, offset) {\r\n        return game.getOffsetFromEntityInWorldCoords(entityHandle, offset.x, offset.y, offset.z);\r\n    }\r\n    static getEntityRearPosition(entityHandle) {\r\n        const modelDimensions = game.getModelDimensions(game.getEntityModel(entityHandle), undefined, undefined);\r\n        return this.getOffsetPositionInWorldCoords(entityHandle, new alt.Vector3(0, modelDimensions[1].y, 0));\r\n    }\r\n}\r\n","references":[]}
