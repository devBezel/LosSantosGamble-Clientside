{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { Position } from '../../Utilities/Position';\r\nimport { Player } from '../../Entities/Player';\r\nimport { Draw } from '../../Utilities/Draw';\r\nexport default async () => {\r\n    alt.everyTick(async () => {\r\n        alt.Player.all.forEach((player) => {\r\n            const distanceFromLocal = Position.distance(player.pos, alt.Player.local.pos);\r\n            if (distanceFromLocal >= 10) {\r\n                return;\r\n            }\r\n            const result = game.getScreenCoordFromWorldCoord(player.pos.x, player.pos.y, player.pos.z + 1.0, undefined, undefined);\r\n            if (!result[0]) {\r\n                return;\r\n            }\r\n            let scale = distanceFromLocal / 25;\r\n            if (scale < 0.5) {\r\n                scale = 0.5;\r\n            }\r\n            if (scale > 0.6) {\r\n                scale = 0.6;\r\n            }\r\n            let yMofidier = distanceFromLocal / 25 / 8;\r\n            if (yMofidier > 0.05) {\r\n                yMofidier = 0.5;\r\n            }\r\n            let y = result[2] - yMofidier;\r\n            if (y <= 0) {\r\n                y = 0;\r\n            }\r\n            alt.setTimeout(() => { }, 200);\r\n            if (player.hasPremium() && player.characterData().name !== null && player.characterData().surname !== null) {\r\n                Draw.drawText(`~y~ ${player.characterData().name} ${player.characterData().surname} (${player.serverID()})`, result[1], y, 0.4, 6, 255, 255, 255, 255, true, false);\r\n            }\r\n            else if (!player.hasPremium() && player.characterData().name !== null && player.characterData().surname !== null) {\r\n                Draw.drawText(`${player.characterData().name} ${player.characterData().surname} (${player.serverID()})`, result[1], y, 0.4, 6, 255, 255, 255, 255, true, false);\r\n            }\r\n            const text = Player.getPlayerDescription(player);\r\n            if (text === null || text === undefined) {\r\n                return;\r\n            }\r\n            const textOne = text.content.slice(0, 64);\r\n            const textTwo = text.content.slice(64, 128);\r\n            const textThree = text.content.slice(128, 192);\r\n            if (text.content.length > 0) {\r\n                const desc = game.getScreenCoordFromWorldCoord(player.pos.x, player.pos.y, player.pos.z + 0.3, undefined, undefined);\r\n                Draw.drawText(textOne, desc[1], desc[2], 0.3, 6, 255, 255, 255, 255, true, false);\r\n            }\r\n            if (text.content.length >= 64) {\r\n                const desc = game.getScreenCoordFromWorldCoord(player.pos.x, player.pos.y, player.pos.z + 0.2, undefined, undefined);\r\n                Draw.drawText(textTwo, desc[1], desc[2], 0.3, 6, 255, 255, 255, 255, true, false);\r\n            }\r\n            if (text.content.length >= 128) {\r\n                const desc = game.getScreenCoordFromWorldCoord(player.pos.x, player.pos.y, player.pos.z + 0.1, undefined, undefined);\r\n                Draw.drawText(textThree, desc[1], desc[2], 0.3, 6, 255, 255, 255, 255, true, false);\r\n            }\r\n        });\r\n    });\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Position.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Entities/Player.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Draw.ts"]}
