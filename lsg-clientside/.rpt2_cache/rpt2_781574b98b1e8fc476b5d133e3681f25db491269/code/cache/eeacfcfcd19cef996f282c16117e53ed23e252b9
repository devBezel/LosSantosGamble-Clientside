{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { ClientEvent } from 'client/modules/Constant/ClientEvent';\r\nimport { ServerEvent } from 'client/modules/Constant/ServerEvent';\r\nimport { PlayerEntity } from '../Entities/PlayerEntity';\r\nexport default async () => {\r\n    const list = [];\r\n    alt.on(ClientEvent.ADD_DX_DRAW, async (identifier, message, posX, posY, posZ, uniqueID) => {\r\n        list.push({ id: identifier, text: message, x: posX, y: posY, z: posZ, uniqueId: uniqueID });\r\n    });\r\n    alt.onServer(ServerEvent.MAP_ADD_DX_DRAW, async (identifier, message, posX, posY, posZ, uniqueID) => {\r\n        list.push({ id: identifier, text: message, x: posX, y: posY, z: posZ, uniqueId: uniqueID });\r\n    });\r\n    alt.onServer(ServerEvent.MAP_REMOVE_DX_DRAW, async (uniqueID) => {\r\n        const deleteDxDraw = list.filter(x => x.uniqueId === uniqueID);\r\n        list.splice(deleteDxDraw[0]);\r\n    });\r\n    alt.everyTick(async () => {\r\n        alt.setTimeout(() => { }, 15);\r\n        alt.Player.all.forEach((player) => {\r\n            for (let i = 0; i < list.length; i++) {\r\n                if (PlayerEntity.isOnAdminDuty(player)) {\r\n                    draw3dText(list[i].x, list[i].y, list[i].z, list[i].text + ` (${list[i].id})`);\r\n                }\r\n                else {\r\n                    draw3dText(list[i].x, list[i].y, list[i].z, list[i].text);\r\n                }\r\n            }\r\n        });\r\n    });\r\n};\r\nexport function draw3dText(x, y, z, name) {\r\n    const [bol, _x, _y] = game.getScreenCoordFromWorldCoord(x, y, z, x, y);\r\n    const camCord = game.getGameplayCamCoords();\r\n    const dist = game.getDistanceBetweenCoords(camCord.x, camCord.y, camCord.z, x, y, z, true);\r\n    if (dist > 20)\r\n        return;\r\n    let scale = (4.00001 / dist) * 0.3;\r\n    if (scale > 0.2) {\r\n        scale = 0.2;\r\n    }\r\n    const fov = (1 / game.getGameplayCamFov()) * 100;\r\n    scale = scale * fov;\r\n    if (bol) {\r\n        game.setTextScale(scale, scale);\r\n        game.setTextFont(0);\r\n        game.setTextProportional(true);\r\n        game.setTextColour(255, 255, 255, 255);\r\n        game.setTextDropshadow(0, 0, 0, 0, 255);\r\n        game.setTextEdge(2, 0, 0, 0, 150);\r\n        game.setTextDropShadow();\r\n        game.setTextOutline();\r\n        game.setTextCentre(true);\r\n        game.beginTextCommandDisplayText('STRING');\r\n        game.addTextComponentSubstringPlayerName(name);\r\n        game.endTextCommandDisplayText(_x, _y + 0.025);\r\n    }\r\n}\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/ClientEvent.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/ServerEvent.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Entities/PlayerEntity.ts"]}
