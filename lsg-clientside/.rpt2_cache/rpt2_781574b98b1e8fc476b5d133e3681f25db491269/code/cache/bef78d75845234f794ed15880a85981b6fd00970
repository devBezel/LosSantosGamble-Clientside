{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { CEFEvent } from 'client/modules/Constant/CEFEvent';\r\nimport { ServerEvent } from 'client/modules/Constant/ServerEvent';\r\nimport { ClientEvent } from 'client/modules/Constant/ClientEvent';\r\nimport { reloadStreetLabel } from './Scripts/StreetScript';\r\nexport default async () => {\r\n    const loginView = new alt.WebView('http://resource/assets/views/lsg_login-panel/index.html');\r\n    const characterView = new alt.WebView('http://resource/assets/views/lsg_select-character/index.html');\r\n    const moneyHud = new alt.WebView('http://resource/assets/views/lsg_money-hud/index.html');\r\n    alt.onServer(ServerEvent.ON_FIRST_CONNECT, async () => {\r\n        loginView.focus();\r\n        alt.showCursor(true);\r\n        game.displayRadar(false);\r\n        loginView.on(CEFEvent.CEF_TRY_LOGIN, async (login, password) => {\r\n            alt.emitServer(ClientEvent.LOGIN_DATA, login, password);\r\n        });\r\n    });\r\n    alt.onServer(ServerEvent.LOGIN_RESULT, async (result, content) => {\r\n        if (result === 0) {\r\n            alt.log('client niezalogowany ' + content);\r\n            return;\r\n        }\r\n        loginView.destroy();\r\n        characterView.emit(CEFEvent.CEF_LOAD_REGISTER_VIEW, true);\r\n        characterView.focus();\r\n        alt.onServer(ServerEvent.GET_CHARACTER_LIST, async (rows) => {\r\n            characterView.emit(CEFEvent.CEF_LOAD_CHARACTER_TO_VIEW, rows);\r\n            characterView.on(CEFEvent.CEF_CHARACTER_SELECTED, async (id) => {\r\n                alt.emitServer(ClientEvent.SPAWN_PLAYER, id);\r\n            });\r\n        });\r\n        alt.onServer(ServerEvent.PLAYER_SPAWNED, async (name, money, dirtymoney) => {\r\n            characterView.destroy();\r\n            alt.showCursor(false);\r\n            game.displayRadar(true);\r\n            moneyHud.emit(CEFEvent.CEF_PLAYER_HUD_INFORMATION, name, money, dirtymoney);\r\n        });\r\n        alt.onServer(ServerEvent.UPDATE_HUD_INFORMATION, async (name, money, dirtymoney) => {\r\n            moneyHud.emit(CEFEvent.CEF_UPDATE_HUD_INFORMATION, name, money, dirtymoney);\r\n        });\r\n    });\r\n    reloadStreetLabel(moneyHud);\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/CEFEvent.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/ServerEvent.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/ClientEvent.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Player/Scripts/StreetScript.ts"]}
