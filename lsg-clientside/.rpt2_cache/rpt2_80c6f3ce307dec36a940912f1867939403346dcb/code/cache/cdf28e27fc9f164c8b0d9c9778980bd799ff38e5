{"code":"import game from 'natives';\r\nimport Point from \"../utils/Point\";\r\nimport Size from \"../utils/Size\";\r\nimport Rectangle from \"./Rectangle\";\r\nimport Screen from \"../utils/Screen\";\r\nexport default class ResRectangle extends Rectangle {\r\n    constructor(pos, size, color) {\r\n        super(pos, size, color);\r\n    }\r\n    Draw(pos, size, color) {\r\n        if (!pos)\r\n            pos = new Size();\r\n        if (pos && !size && !color) {\r\n            pos = new Point(this.Pos.X + pos.Width, this.Pos.Y + pos.Height);\r\n            size = this.Size;\r\n            color = this.Color;\r\n        }\r\n        const screenw = Screen.Width;\r\n        const screenh = Screen.Height;\r\n        const height = 1080.0;\r\n        const ratio = screenw / screenh;\r\n        const width = height * ratio;\r\n        const w = size.Width / width;\r\n        const h = size.Height / height;\r\n        const x = pos.X / width + w * 0.5;\r\n        const y = pos.Y / height + h * 0.5;\r\n        game.drawRect(x, y, w, h, color.R, color.G, color.B, color.A, false);\r\n    }\r\n}\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Point.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Size.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/modules/Rectangle.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Screen.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Color.ts"]}
