{"code":"import * as alt from 'alt';\r\nexport default async () => {\r\n    const player = alt.Player.local;\r\n    let vehicleInterval;\r\n    const webView = new alt.WebView('http://resources/ls_gamble/client/lsg_vehicle_hud/app.html');\r\n    alt.onServer('player:enterVehicle', showPlayerSpeedometr);\r\n    alt.onServer('player:leaveVehicle', closePlayerSpeedometr);\r\n    alt.onServer('player:changeVehicleSeat', changePlayerSeat);\r\n    async function showPlayerSpeedometr(seat) {\r\n        if (seat !== 1)\r\n            return;\r\n        webView.emit('vehicle-speedometr:open');\r\n        vehicleInterval = alt.setInterval(() => {\r\n            if (player.vehicle === null || player.vehicle === undefined) {\r\n                alt.clearInterval(vehicleInterval);\r\n                webView.emit('vehicle-speedometr:close');\r\n                return;\r\n            }\r\n            const vehicleSpeed = Math.ceil(player.vehicle.speed * 3.6);\r\n            const vehicleFuel = 0;\r\n            webView.emit('vehicle-speedometr:data', vehicleSpeed, vehicleFuel);\r\n        }, 2);\r\n    }\r\n    async function closePlayerSpeedometr(seat) {\r\n        if (seat !== 1)\r\n            return;\r\n        webView.emit('vehicle-speedometr:close');\r\n        alt.clearInterval(vehicleInterval);\r\n    }\r\n    async function changePlayerSeat(oldSeat, newSeat) {\r\n        if (oldSeat === 1) {\r\n            return closePlayerSpeedometr(oldSeat);\r\n        }\r\n        if (newSeat === 1) {\r\n            return showPlayerSpeedometr(newSeat);\r\n        }\r\n    }\r\n};\r\n","references":[]}
