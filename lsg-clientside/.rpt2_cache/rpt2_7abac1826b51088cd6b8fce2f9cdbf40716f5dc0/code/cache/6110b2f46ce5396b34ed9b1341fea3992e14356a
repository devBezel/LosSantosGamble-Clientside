{"code":"import * as alt from 'alt';\r\nimport { weaponItemConfig } from 'client/modules/Configs/Items/WeaponItemConfig';\r\nimport { Animation } from '../Utilities/Animation';\r\nexport default async () => {\r\n    const player = alt.Player.local;\r\n    alt.onServer('item:weaponTakeOut', weaponTakeOut);\r\n    alt.onServer('item:weaponHide', weaponHide);\r\n    async function weaponTakeOut(weaponHash) {\r\n        alt.log(weaponHash);\r\n        for (let i = 0; i < weaponItemConfig.weaponTakeOutAnims.length; i++) {\r\n            if (weaponItemConfig.weaponTakeOutAnims[i].Hash === weaponHash) {\r\n                const anim = new Animation(weaponItemConfig.weaponTakeOutAnims[i].AnimDict, weaponItemConfig.weaponTakeOutAnims[i].Anim, weaponItemConfig.weaponTakeOutAnims[i].Time);\r\n                anim.loadAnimDictAsync();\r\n                anim.playAnim();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    async function weaponHide(weaponHash) {\r\n        for (let i = 0; i < weaponItemConfig.weaponHideAnims.length; i++) {\r\n            if (weaponItemConfig.weaponHideAnims[i].Hash === weaponHash) {\r\n                const anim = new Animation(weaponItemConfig.weaponHideAnims[i].AnimDict, weaponItemConfig.weaponHideAnims[i].Anim, weaponItemConfig.weaponHideAnims[i].Time);\r\n                anim.loadAnimDictAsync();\r\n                anim.playAnim();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Configs/Items/WeaponItemConfig.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Animation.ts"]}
