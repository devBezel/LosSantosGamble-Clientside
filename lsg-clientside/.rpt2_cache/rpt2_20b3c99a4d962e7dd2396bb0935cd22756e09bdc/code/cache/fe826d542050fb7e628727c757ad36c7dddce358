{"code":"import * as alt from 'alt';\r\nimport { weaponItemConfig } from 'client/modules/Configs/Items/WeaponItemConfig';\r\nimport { Animation } from '../Utilities/Animation';\r\nexport default async () => {\r\n    const player = alt.Player.local;\r\n    alt.onServer('item:weaponTakeOut', weaponTakeOutEvent);\r\n    alt.onServer('item:weaponHide', weaponHideEvent);\r\n    async function weaponTakeOutEvent(weaponHash, hasWeaponHolster) {\r\n        const resultWeapon = await checkWeapon(weaponHash);\r\n        if (!resultWeapon)\r\n            return;\r\n        if (hasWeaponHolster) {\r\n            weaponTakeOutWithHolster(resultWeapon);\r\n            return;\r\n        }\r\n        weaponTakeOutWithoutHolster(resultWeapon);\r\n    }\r\n    async function weaponHideEvent(weaponHash, hasWeaponHolster) {\r\n        const resultWeapon = await checkWeapon(weaponHash);\r\n        if (!resultWeapon)\r\n            return;\r\n        if (hasWeaponHolster) {\r\n            weaponHideWithHolster(resultWeapon);\r\n            return;\r\n        }\r\n        weaponHideWithoutHolster(resultWeapon);\r\n    }\r\n    async function weaponTakeOutWithHolster(weaponIndex) {\r\n        const anim = new Animation(weaponItemConfig.weaponTakeOutAnims[weaponIndex].WithWeaponHolster.AnimDict, weaponItemConfig.weaponTakeOutAnims[weaponIndex].WithWeaponHolster.Anim, weaponItemConfig.weaponTakeOutAnims[weaponIndex].WithWeaponHolster.Time);\r\n        anim.loadAnimDictAsync();\r\n        anim.playAnim();\r\n    }\r\n    async function weaponHideWithHolster(weaponIndex) {\r\n        const anim = new Animation(weaponItemConfig.weaponHideAnims[weaponIndex].WithWeaponHolster.AnimDict, weaponItemConfig.weaponHideAnims[weaponIndex].WithWeaponHolster.Anim, weaponItemConfig.weaponHideAnims[weaponIndex].WithWeaponHolster.Time);\r\n        anim.loadAnimDictAsync();\r\n        anim.playAnim();\r\n    }\r\n    async function weaponTakeOutWithoutHolster(weaponIndex) {\r\n        const anim = new Animation(weaponItemConfig.weaponTakeOutAnims[weaponIndex].WithoutWeaponHolster.AnimDict, weaponItemConfig.weaponTakeOutAnims[weaponIndex].WithoutWeaponHolster.Anim, weaponItemConfig.weaponTakeOutAnims[weaponIndex].WithoutWeaponHolster.Time);\r\n        anim.loadAnimDictAsync();\r\n        anim.playAnim();\r\n    }\r\n    async function weaponHideWithoutHolster(weaponIndex) {\r\n        const anim = new Animation(weaponItemConfig.weaponHideAnims[weaponIndex].WithoutWeaponHolster.AnimDict, weaponItemConfig.weaponHideAnims[weaponIndex].WithoutWeaponHolster.Anim, weaponItemConfig.weaponHideAnims[weaponIndex].WithoutWeaponHolster.Time);\r\n        anim.loadAnimDictAsync();\r\n        anim.playAnim();\r\n    }\r\n    async function checkWeapon(weaponHash) {\r\n        for (let i = 0; i < weaponItemConfig.weaponTakeOutAnims.length; i++) {\r\n            if (weaponItemConfig.weaponTakeOutAnims[i].Hash === weaponHash) {\r\n                return i;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Configs/Items/WeaponItemConfig.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Animation.ts"]}
