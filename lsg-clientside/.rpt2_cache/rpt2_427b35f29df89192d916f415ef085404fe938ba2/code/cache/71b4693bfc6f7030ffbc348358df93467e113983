{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { View } from '../Utilities/View';\r\nimport { Key } from 'client/modules/Constant/Keys/Key';\r\nimport { LoadingScreen, Context } from '../Utilities/LoadingScreen';\r\nexport default async () => {\r\n    let webView;\r\n    const loadingScreen = new LoadingScreen();\r\n    alt.on('keyup', async (key) => {\r\n        if (key === Key.ESCAPE) {\r\n            if (webView === null || webView === undefined) {\r\n                return;\r\n            }\r\n            webView.close();\r\n        }\r\n    });\r\n    alt.onServer('bus:information', openBusWindow);\r\n    alt.onServer('bus:moneyRemovedStartTimer', startBusTimer);\r\n    async function openBusWindow(bus, busStations) {\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        if (alt.Player.local.getMeta('viewOpen'))\r\n            return;\r\n        webView.open('', true, 'bus');\r\n        webView.emit('cef:busInformation', bus, busStations);\r\n        webView.on('cef:selectBusStation', selectBusStation);\r\n        alt.log(busStations.length);\r\n    }\r\n    async function selectBusStation(id, cost, time, posX, posY, posZ) {\r\n        alt.emitServer('bus:selectStation', id, cost, time, posX, posY, posZ);\r\n    }\r\n    async function startBusTimer(time, posX, posY, posZ) {\r\n        alt.log(time, posX, posY, posZ);\r\n        let toCountDown = Math.floor(time * 60);\r\n        alt.log(toCountDown);\r\n        const interval = alt.setInterval(() => {\r\n            toCountDown--;\r\n            alt.log(`Po odjęciu: ${toCountDown}`);\r\n            if (toCountDown < 0) {\r\n                alt.clearInterval(interval);\r\n            }\r\n        }, 1000);\r\n        const scaleformInterval = alt.setInterval(() => {\r\n            const minutes = Math.floor(toCountDown / 60);\r\n            const seconds = toCountDown - minutes * 60;\r\n            loadingScreen.setContext(Context.PcLanding);\r\n            loadingScreen.setProgressTitle('Pozostało: ');\r\n            loadingScreen.setProgressText(`${minutes} ${seconds}`);\r\n            loadingScreen.draw();\r\n            if (toCountDown <= 0) {\r\n                loadingScreen.destroy();\r\n                alt.clearInterval(scaleformInterval);\r\n                game.setEntityCoords(alt.Player.local.scriptID, posX, posY, posZ, false, false, false, false);\r\n            }\r\n        }, 5);\r\n    }\r\n    alt.on('keyup', async (key) => {\r\n        if (key === Key.ESCAPE) {\r\n            loadingScreen.destroy();\r\n        }\r\n    });\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/busStop.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Models/busStopStation.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/View.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/Keys/Key.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/LoadingScreen.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/Countdown.ts"]}
