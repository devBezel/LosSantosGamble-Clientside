{"code":"import * as alt from 'alt';\r\nimport * as nativeUI from '../../../Includes/nativeui/NativeUi';\r\nimport { RankParser } from '../../Helpers/RankParser';\r\nimport { NativeExtenstion } from 'client/modules/Extenstion/NativeExtenstion';\r\nexport default async () => {\r\n    alt.onServer('admin:openBasePanel', openBasePanelWindow);\r\n    async function openBasePanelWindow() {\r\n        menu.Open();\r\n    }\r\n    const menu = new nativeUI.Menu('ADMIN PANEL', 'Opcje główne', new nativeUI.Point(50, 50));\r\n    const menuPlayers = new nativeUI.Menu('Gracze', `Ilość graczy: ${alt.Player.all.length}`, new nativeUI.Point(50, 50));\r\n    const menuPlayersItem = new nativeUI.UIMenuItem('Gracze', '');\r\n    menu.AddSubMenu(menuPlayers, menuPlayersItem);\r\n    menu.ItemSelect.on((selectedItem) => {\r\n        if (selectedItem instanceof nativeUI.UIMenuItem) {\r\n            alt.Player.all.forEach((player) => {\r\n                const serverID = player.getSyncedMeta('account:id');\r\n                const accountData = player.getSyncedMeta('account:dataAccount');\r\n                const characterData = player.getSyncedMeta('character:dataCharacter');\r\n                menuPlayers.Clear();\r\n                const playerItem = new nativeUI.UIMenuItem(`[${serverID}]${characterData.name} ${characterData.surname} (${RankParser.parse(accountData.rank)})`, 'Gracz', player);\r\n                menuPlayers.AddItem(playerItem);\r\n            });\r\n        }\r\n    });\r\n    menuPlayers.ItemSelect.on((selectedItem) => {\r\n        if (selectedItem instanceof nativeUI.UIMenuItem) {\r\n            if (selectedItem.Data instanceof alt.Player) {\r\n                characterMenu(selectedItem, selectedItem.Data);\r\n            }\r\n        }\r\n    });\r\n    const menuPlayerOptions = new nativeUI.Menu('OPCJE', 'Wybierz interesującą Cię opcje', new nativeUI.Point(50, 50));\r\n    async function characterMenu(selectedItem, player) {\r\n        menuPlayerOptions.Clear();\r\n        menuPlayers.AddSubMenu(menuPlayerOptions, selectedItem);\r\n        menuPlayerOptions.AddItem(new nativeUI.UIMenuItem('Informacje gracza', '', { action: 'player_information', entity: player }));\r\n        menuPlayerOptions.AddItem(new nativeUI.UIMenuItem('Teleporuj gracza', '', { action: 'player_teleport_to_admin', entity: player }));\r\n        menuPlayerOptions.AddItem(new nativeUI.UIMenuItem('Teleporuj do gracza', '', { action: 'admin_teleport_to_player', entity: player }));\r\n        menuPlayerOptions.AddItem(new nativeUI.UIMenuItem('Utwórz item', '', { action: 'create_item', entity: player }));\r\n    }\r\n    menuPlayerOptions.ItemSelect.on((selectedItem) => {\r\n        if (selectedItem instanceof nativeUI.UIMenuItem) {\r\n            if (selectedItem.Data.entity instanceof alt.Player) {\r\n                switch (selectedItem.Data.action) {\r\n                    case 'player_information':\r\n                        characterInformation(selectedItem, selectedItem.Data.entity);\r\n                        break;\r\n                    case 'player_teleport_to_admin':\r\n                        playerTeleportToAdmin(selectedItem.Data.entity);\r\n                        break;\r\n                    case 'admin_teleport_to_player':\r\n                        adminTeleportToPlayer(selectedItem.Data.entity);\r\n                        break;\r\n                    case 'create_item':\r\n                        createItemForPlayer(selectedItem, selectedItem.Data.entity);\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    async function characterInformation(selectedItem, player) {\r\n        const accountData = player.getSyncedMeta('account:dataAccount');\r\n        const characterData = player.getSyncedMeta('character:dataCharacter');\r\n        const serverID = player.getSyncedMeta('account:id');\r\n        const hasPremium = player.getSyncedMeta('account:hasPremium');\r\n        const characterInformationMenu = new nativeUI.Menu(`${characterData.name} ${characterData.surname}`, 'Informacje', new nativeUI.Point(50, 50));\r\n        menuPlayerOptions.AddSubMenu(characterInformationMenu, selectedItem);\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`ID: ${serverID}`));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`CID: ${characterData.id}`));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`UID: ${accountData.id}`));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`Konto: ${accountData.username}`));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`Premium: ${hasPremium ? '~g~Tak' : '~r~Nie'}`));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem('________________'));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`Płeć: ${characterData.gender ? 'Kobieta' : 'Mężczyzna'}`, 'Płeć gracza'));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`Wiek: ${characterData.age} lat`));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`Gotówka: ${characterData.money}$`));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`Bank: ${characterData.bank}$`));\r\n        characterInformationMenu.AddItem(new nativeUI.UIMenuItem(`HP: ${NativeExtenstion.getPlayerHealth(player)}`, 'Gracz'));\r\n    }\r\n    async function playerTeleportToAdmin(player) {\r\n        alt.emitServer('admin-panel:teleportToAdmin', player);\r\n    }\r\n    async function adminTeleportToPlayer(player) {\r\n        alt.emitServer('admin-panel:teleportToPlayer', player);\r\n    }\r\n    const creatorItemMenu = new nativeUI.Menu('Tworzenie itemu', 'Uzupełnij poniższe rzeczy', new nativeUI.Point(50, 50));\r\n    async function createItemForPlayer(selectedItem, player) {\r\n        menuPlayerOptions.AddSubMenu(creatorItemMenu, selectedItem);\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/NativeUi.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Constant/Keys/Key.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Helpers/RankParser.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Extenstion/NativeExtenstion.ts"]}
