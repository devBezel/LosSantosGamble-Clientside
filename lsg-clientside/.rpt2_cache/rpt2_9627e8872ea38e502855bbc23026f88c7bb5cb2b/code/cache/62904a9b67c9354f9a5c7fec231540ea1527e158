{"code":"import game from 'natives';\r\nimport Color from \"../utils/Color\";\r\nimport Point from \"../utils/Point\";\r\nimport IElement from \"./IElement\";\r\nexport default class Text extends IElement {\r\n    constructor(caption, pos, scale, color, font, centered) {\r\n        super();\r\n        this.Caption = caption;\r\n        this.Pos = pos;\r\n        this.Scale = scale;\r\n        this.Color = color || new Color(255, 255, 255, 255);\r\n        this.Font = font || 0;\r\n        this.Centered = centered || false;\r\n    }\r\n    Draw(caption, pos, scale, color, font, centered) {\r\n        if (caption && !pos && !scale && !color && !font && !centered) {\r\n            pos = new Point(this.Pos.X + caption.Width, this.Pos.Y + caption.Height);\r\n            scale = this.Scale;\r\n            color = this.Color;\r\n            font = this.Font;\r\n            centered = this.Centered;\r\n        }\r\n        const x = pos.X / 1280.0;\r\n        const y = pos.Y / 720.0;\r\n        game.setTextFont(parseInt(font));\r\n        game.setTextScale(scale, scale);\r\n        game.setTextColour(color.R, color.G, color.B, color.A);\r\n        game.setTextCentre(centered);\r\n        game.beginTextCommandDisplayText(\"STRING\");\r\n        Text.AddLongString(caption);\r\n        game.endTextCommandDisplayText(x, y, 0);\r\n    }\r\n    static AddLongString(text) {\r\n        if (!text.length)\r\n            return;\r\n        const maxStringLength = 99;\r\n        for (let i = 0, position; i < text.length; i += maxStringLength) {\r\n            let currentText = text.substr(i, i + maxStringLength);\r\n            let currentIndex = i;\r\n            if ((currentText.match(/~/g) || []).length % 2 !== 0) {\r\n                position = currentText.lastIndexOf('~');\r\n                i -= (maxStringLength - position);\r\n            }\r\n            else {\r\n                position = Math.min(maxStringLength, text.length - currentIndex);\r\n            }\r\n            game.addTextComponentSubstringPlayerName(text.substr(currentIndex, position));\r\n        }\r\n    }\r\n}\r\nexport { Text };\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Color.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Point.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/modules/IElement.ts","B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Includes/nativeui/utils/Size.ts"]}
