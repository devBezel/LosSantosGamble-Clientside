{"code":"import * as alt from 'alt';\r\nimport * as game from 'natives';\r\nimport { View } from '../../Utilities/View';\r\nexport default async () => {\r\n    let webView;\r\n    let isAfk;\r\n    let prevPos;\r\n    const player = alt.Player.local;\r\n    const secondsUntilAFK = 180;\r\n    let time;\r\n    alt.setInterval(() => {\r\n        const currentPos = game.getEntityCoords(player.scriptID, true);\r\n        if ((currentPos !== undefined && prevPos !== undefined) && (currentPos.x === prevPos.x && currentPos.y === prevPos.y) && player.isReady()) {\r\n            if (time > 0) {\r\n                time -= 2;\r\n            }\r\n            else {\r\n                if (!isAfk) {\r\n                    turnAFKStatus();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (isAfk) {\r\n                disposeAFKStatus();\r\n            }\r\n            time = secondsUntilAFK;\r\n        }\r\n    }, 2000);\r\n    alt.setInterval(() => {\r\n        prevPos = game.getEntityCoords(player.scriptID, true);\r\n    }, 1000);\r\n    function turnAFKStatus() {\r\n        isAfk = true;\r\n        alt.emitServer('player:afk', true);\r\n        if (!webView) {\r\n            webView = new View();\r\n        }\r\n        webView.open('', false, 'afk', true, false);\r\n    }\r\n    function disposeAFKStatus() {\r\n        isAfk = false;\r\n        alt.emitServer('player:afk', false);\r\n        webView.close();\r\n    }\r\n};\r\n","references":["B:/Projekty/LSGamble-Clientside/lsg-clientside/modules/Core/Utilities/View.ts"]}
